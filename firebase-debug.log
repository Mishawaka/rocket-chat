[debug] [2018-07-09T16:31:46.891Z] ----------------------------------------------------------------------
[debug] [2018-07-09T16:31:46.892Z] Command:       /home/misha/.nvm/versions/node/v10.5.0/bin/node /home/misha/.nvm/versions/node/v10.5.0/bin/firebase init
[debug] [2018-07-09T16:31:46.893Z] CLI Version:   3.19.3
[debug] [2018-07-09T16:31:46.893Z] Platform:      linux
[debug] [2018-07-09T16:31:46.893Z] Node Version:  v10.5.0
[debug] [2018-07-09T16:31:46.893Z] Time:          Mon Jul 09 2018 19:31:46 GMT+0300 (GMT+03:00)
[debug] [2018-07-09T16:31:46.893Z] ----------------------------------------------------------------------
[debug] 
[debug] [2018-07-09T16:31:46.899Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase"]
[debug] [2018-07-09T16:31:46.899Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /home/misha/vsc/rocket-chat

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2018-07-09T16:31:54.462Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2018-07-09T16:31:54.464Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 { refresh_token: '1/xesKH5sWvpgc_gaaSJK9Sl4IdoTZmpy_GK4C3fRWkQM',
  client_id:
   '563584335869-fgrhgmd47bqnekij5i8b5pr03ho849e6.apps.googleusercontent.com',
  client_secret: 'j9iVZfS8kkCEFUPaAeJV0sAi',
  grant_type: 'refresh_token',
  scope:
   'email https://www.googleapis.com/auth/cloudplatformprojects.readonly https://www.googleapis.com/auth/firebase openid' } 
 Mon Jul 09 2018 19:31:54 GMT+0300 (GMT+03:00)
[debug] [2018-07-09T16:31:54.895Z] <<< HTTP RESPONSE 200
[debug] [2018-07-09T16:31:54.965Z] >>> HTTP REQUEST GET https://admin.firebase.com/v1/projects  
  
 Mon Jul 09 2018 19:31:54 GMT+0300 (GMT+03:00)
[debug] [2018-07-09T16:31:56.255Z] <<< HTTP RESPONSE 200
[info] 
=== Database Setup
[info] 
[info] Firebase Realtime Database Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[info] ✔  Database Rules for undefined have been downloaded to database.rules.json.
[info] Future modifications to database.rules.json will update Database Rules when you run
[info] firebase deploy.
[info] 
=== Firestore Setup
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[info] ✔  Wrote functions/package.json
[info] ✔  Wrote functions/.eslintrc.json
[info] ✔  Wrote functions/index.js
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
